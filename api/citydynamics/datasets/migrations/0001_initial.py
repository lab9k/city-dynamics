# Generated by Django 2.0.5 on 2018-06-25 14:44

import django.contrib.gis.db.models.fields
import django.contrib.postgres.fields.jsonb
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Buurtcombinatie',
            fields=[
                ('ogc_fid', models.AutoField(primary_key=True, serialize=False)),
                ('gml_id', models.CharField(max_length=255)),
                ('id', models.CharField(blank=True, max_length=255, null=True)),
                ('vollcode', models.CharField(blank=True, max_length=255, null=True)),
                ('naam', models.CharField(blank=True, max_length=255, null=True)),
                ('display', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('uri', models.CharField(blank=True, max_length=255, null=True)),
                ('wkb_geometry', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=4326)),
                ('wkb_geometry_simplified', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
            ],
            options={
                'db_table': 'buurtcombinatie',
            },
        ),
        migrations.CreateModel(
            name='BuurtCombinatieDrukteindex',
            fields=[
                ('index', models.BigIntegerField(primary_key=True, serialize=False)),
                ('hour', models.IntegerField()),
                ('weekday', models.IntegerField()),
                ('drukteindex', models.FloatField()),
                ('vollcode', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='druktecijfers_bc', to='datasets.Buurtcombinatie')),
            ],
        ),
        migrations.CreateModel(
            name='Hotspots',
            fields=[
                ('index', models.BigIntegerField(primary_key=True, serialize=False)),
                ('hotspot', models.TextField(blank=True, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lon', models.FloatField(blank=True, null=True)),
                ('is_alpha_hotspot', models.BigIntegerField(blank=True, null=True)),
                ('alpha_hotspot_name', models.TextField(blank=True, null=True)),
                ('polygon', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('notes', models.TextField(blank=True, null=True)),
                ('centroid', django.contrib.gis.db.models.fields.GeometryField(blank=True, null=True, srid=0)),
                ('vollcode', models.CharField(blank=True, max_length=255, null=True)),
                ('stadsdeelcode', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'hotspots',
            },
        ),
        migrations.CreateModel(
            name='HotspotsDrukteIndex',
            fields=[
                ('index', models.BigIntegerField(primary_key=True, serialize=False)),
                ('hour', models.IntegerField()),
                ('weekday', models.IntegerField()),
                ('drukteindex', models.FloatField()),
                ('hotspot', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='druktecijfers', to='datasets.Hotspots')),
            ],
        ),
        migrations.CreateModel(
            name='RealtimeAnalyzer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
                ('ov_fiets_crowdedness_score', models.FloatField(blank=True, null=True)),
                ('ndw_crowdedness_score', models.FloatField(blank=True, null=True)),
                ('pr_crowdedness_score', models.FloatField(blank=True, null=True)),
                ('knmi_crowdedness_score', models.FloatField(blank=True, null=True)),
                ('weercijfer', models.FloatField(blank=True, null=True)),
                ('combined_crowdedness_score', models.FloatField(blank=True, null=True)),
                ('alp_mean', models.FloatField(blank=True, null=True)),
                ('alp_count', models.FloatField(blank=True, null=True)),
                ('diff', models.FloatField(blank=True, null=True)),
                ('w_fiets', models.FloatField(blank=True, null=True)),
                ('w_ndw', models.FloatField(blank=True, null=True)),
                ('w_pr', models.FloatField(blank=True, null=True)),
                ('w_knmi', models.FloatField(blank=True, null=True)),
                ('w_weer', models.FloatField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='RealtimeGoogle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_id', models.TextField(db_index=True)),
                ('scraped_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.TextField()),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
            options={
                'db_table': 'google_raw_locations_realtime_current_acceptance',
            },
        ),
        migrations.CreateModel(
            name='RealtimeHistorian',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_id', models.TextField(db_index=True)),
                ('scraped_at', models.DateTimeField(auto_now_add=True)),
                ('name', models.TextField(null=True)),
                ('source', models.CharField(max_length=40)),
                ('data', django.contrib.postgres.fields.jsonb.JSONField()),
            ],
        ),
    ]
